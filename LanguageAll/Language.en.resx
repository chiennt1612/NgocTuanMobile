<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountLockout" xml:space="preserve">
    <value>User account locked out</value>
  </data>
  <data name="AuthenticatorCode" xml:space="preserve">
    <value>AuthenticatorCode</value>
  </data>
  <data name="CasherIsExists" xml:space="preserve">
    <value>CasherIsExists</value>
  </data>
  <data name="ChangedUserIsNull" xml:space="preserve">
    <value>ChangedUserIsNull</value>
  </data>
  <data name="ChangePasswordIsFail" xml:space="preserve">
    <value>Change Password Is Fail</value>
  </data>
  <data name="CompanyIDInvalid" xml:space="preserve">
    <value>Company invalid</value>
  </data>
  <data name="Confirmationnotmatch" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="ConfirmPasswordIsWrong" xml:space="preserve">
    <value>ConfirmPasswordIsWrong</value>
  </data>
  <data name="ContentIsNull" xml:space="preserve">
    <value>ContentIsNull</value>
  </data>
  <data name="ContentOfTaskIsNull" xml:space="preserve">
    <value>ContentOfTaskIsNull</value>
  </data>
  <data name="CreateDateIsNull" xml:space="preserve">
    <value>CreateDateIsNull</value>
  </data>
  <data name="CustomerIsNull" xml:space="preserve">
    <value>CustomerIsNull</value>
  </data>
  <data name="CustomerIsWrong" xml:space="preserve">
    <value>CustomerIsWrong</value>
  </data>
  <data name="DateFromIsWrong" xml:space="preserve">
    <value>DateFromIsWrong</value>
  </data>
  <data name="DateToIsWrong" xml:space="preserve">
    <value>DateToIsWrong</value>
  </data>
  <data name="DeleteSuccess" xml:space="preserve">
    <value>Delete is success</value>
  </data>
  <data name="EmailIsNotValid" xml:space="preserve">
    <value>The Email field is not a valid e-mail address.</value>
  </data>
  <data name="Fail" xml:space="preserve">
    <value>Fail</value>
  </data>
  <data name="FormatPhoneNumberFail" xml:space="preserve">
    <value>Phone number invalid</value>
  </data>
  <data name="GetProfileOK" xml:space="preserve">
    <value>GetProfileOK</value>
  </data>
  <data name="InvalidCredentialsErrorMessage" xml:space="preserve">
    <value>Invalid username or password</value>
  </data>
  <data name="LinkInvoiceFailCodeEmpty" xml:space="preserve">
    <value>Customer code is not allow null</value>
  </data>
  <data name="LinkInvoiceFailCodeHasLink" xml:space="preserve">
    <value>Customer code has linked with other Account</value>
  </data>
  <data name="LinkInvoiceFailCodeNotExitst" xml:space="preserve">
    <value>Customer code is not exitst</value>
  </data>
  <data name="LinkInvoiceSuccess" xml:space="preserve">
    <value>Link invoice is success</value>
  </data>
  <data name="LoginFail" xml:space="preserve">
    <value>Username or password is wrong</value>
  </data>
  <data name="ModelStateInValid" xml:space="preserve">
    <value>ModelState InValid</value>
  </data>
  <data name="ModifyDateIsNull" xml:space="preserve">
    <value>ModifyDateIsNull</value>
  </data>
  <data name="NewPasswordIsSame" xml:space="preserve">
    <value>NewPasswordIsSame</value>
  </data>
  <data name="NoPermission" xml:space="preserve">
    <value>NoPermission</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>Not found</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Older password</value>
  </data>
  <data name="OTPCode" xml:space="preserve">
    <value>OTPCode</value>
  </data>
  <data name="OTPInvalid" xml:space="preserve">
    <value>OTP invalid</value>
  </data>
  <data name="OTPLimited" xml:space="preserve">
    <value>Please login after 1 day</value>
  </data>
  <data name="OTPWait" xml:space="preserve">
    <value>Please login after 3 minutes</value>
  </data>
  <data name="OwnerIsNull" xml:space="preserve">
    <value>OwnerIsNull</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordLength" xml:space="preserve">
    <value>The {0} must be at least {2} and at max {1} characters long.</value>
  </data>
  <data name="PasswordMismatch" xml:space="preserve">
    <value>Incorrect password.</value>
  </data>
  <data name="PasswordRequiresDigit" xml:space="preserve">
    <value>Passwords must have at least one digit ('0'-'9').</value>
  </data>
  <data name="PasswordRequiresLower" xml:space="preserve">
    <value>Passwords must have at least one lowercase ('a'-'z').</value>
  </data>
  <data name="PasswordRequiresNonAlphanumeric" xml:space="preserve">
    <value>Passwords must have at least one non alphanumeric character.</value>
  </data>
  <data name="PasswordRequiresUniqueChars" xml:space="preserve">
    <value>Passwords must use at least {RequiredUniqueChars} different characters.</value>
  </data>
  <data name="PasswordRequiresUpper" xml:space="preserve">
    <value>Passwords must have at least one uppercase ('A'-'Z').</value>
  </data>
  <data name="PasswordTooShort" xml:space="preserve">
    <value>Passwords must be at least {RequiredLength} characters.</value>
  </data>
  <data name="PaymentStatusIsWrong" xml:space="preserve">
    <value>Payment status is wrong</value>
  </data>
  <data name="RecoveryCode" xml:space="preserve">
    <value>Recovery code</value>
  </data>
  <data name="RefreshTokenInvalid" xml:space="preserve">
    <value>RefreshToken invalid</value>
  </data>
  <data name="Remember" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="RemoveInvoiceSuccess" xml:space="preserve">
    <value>Remove invoice success</value>
  </data>
  <data name="RenewTokenFail" xml:space="preserve">
    <value>Renew token fail</value>
  </data>
  <data name="ResetPasswordIsFail" xml:space="preserve">
    <value>Reset password is fail</value>
  </data>
  <data name="ServiceIsNull" xml:space="preserve">
    <value>Service is null</value>
  </data>
  <data name="ServiceNotFound" xml:space="preserve">
    <value>Service id not found</value>
  </data>
  <data name="SetCompanyInfoSuccess" xml:space="preserve">
    <value>Set Company-info Success</value>
  </data>
  <data name="SetProfileFailCompanyName" xml:space="preserve">
    <value>Company name is not allow null</value>
  </data>
  <data name="SetProfileFailEmail" xml:space="preserve">
    <value>SetProfileFailEmail</value>
  </data>
  <data name="SetProfileFailFullname" xml:space="preserve">
    <value>Fullname is not allow null</value>
  </data>
  <data name="SetProfileSuccess" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="StaffIsExists" xml:space="preserve">
    <value>Staff is exists</value>
  </data>
  <data name="StaffIsNull" xml:space="preserve">
    <value>Staff is null</value>
  </data>
  <data name="StaffNotExists" xml:space="preserve">
    <value>Staff is not exists</value>
  </data>
  <data name="StatusIsWrong" xml:space="preserve">
    <value>Work status is wrong</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="TaskNameIsNull" xml:space="preserve">
    <value>Taskname is null</value>
  </data>
  <data name="TaskNotFound" xml:space="preserve">
    <value>Task does not found</value>
  </data>
  <data name="Unauthorized" xml:space="preserve">
    <value>Unauthorized</value>
  </data>
  <data name="UserCreateFail" xml:space="preserve">
    <value>User creation failed! Please check user details and try again!</value>
  </data>
  <data name="VerifyOTP" xml:space="preserve">
    <value>Please verify OTP</value>
  </data>
  <data name="VerifyPassword" xml:space="preserve">
    <value>Please enter your password</value>
  </data>
</root>